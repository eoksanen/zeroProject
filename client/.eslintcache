[{"E:\\zeroProject\\client\\src\\index.js":"1","E:\\zeroProject\\client\\src\\App.js":"2","E:\\zeroProject\\client\\src\\components\\LoginForm.js":"3","E:\\zeroProject\\client\\src\\queries\\query.js":"4","E:\\zeroProject\\client\\src\\queries\\mutation.js":"5","E:\\zeroProject\\client\\src\\components\\Notify.js":"6","E:\\zeroProject\\client\\src\\components\\Users.js":"7","E:\\zeroProject\\client\\src\\components\\UserForm.js":"8","E:\\zeroProject\\client\\src\\queries\\subscription.js":"9"},{"size":1546,"mtime":1608294926059,"results":"10","hashOfConfig":"11"},{"size":2226,"mtime":1608310412981,"results":"12","hashOfConfig":"11"},{"size":1845,"mtime":1608310517069,"results":"13","hashOfConfig":"11"},{"size":912,"mtime":1608129044540,"results":"14","hashOfConfig":"11"},{"size":739,"mtime":1608130429339,"results":"15","hashOfConfig":"11"},{"size":285,"mtime":1608027761598,"results":"16","hashOfConfig":"11"},{"size":668,"mtime":1608129271795,"results":"17","hashOfConfig":"11"},{"size":2166,"mtime":1608194512109,"results":"18","hashOfConfig":"11"},{"size":244,"mtime":1608310353132,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13qo4nq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\zeroProject\\client\\src\\index.js",[],["43","44"],"E:\\zeroProject\\client\\src\\App.js",["45"],"import React, { useState } from 'react'\nimport LoginForm from './components/LoginForm'\nimport { useQuery, useApolloClient, useSubscription, updateCacheWith } from '@apollo/client'\nimport Notify from './components/Notify'\nimport Users from './components/Users'\nimport UserForm from './components/UserForm'\nimport { ALL_USERS } from './queries/query'\nimport { USER_ADDED } from './queries/subscription'\n\nimport './App.css';\n\nfunction App() {\n  const [page, setPage] = useState('welcome')\n  const [token, setToken] = useState(localStorage.getItem('zero-user-token') ? localStorage.getItem('zero-user-token') : null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const[ user, setUser ] = useState(null)\n\n  const client = useApolloClient()\n\n  const allUsers = useQuery(ALL_USERS)\n\n  console.log('all Users ',allUsers)\n\n  const logout = () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n\n  const notify = (message) => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 10000)\n  }\n\n  useSubscription(USER_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      const addedUser = subscriptionData.data.userAdded\n      console.log(addedUser.name, 'addedSubscription')\n      notify(`${addedUser.name} added`)\n      updateCacheWith(addedUser)\n    }\n  })\n  \n\n if (allUsers.loading)  {\n  return <div>loading...</div>\n}\n\n  return (\n    <div className=\"App\">\n\n      <div>\n      <Notify errorMessage={errorMessage} />\n        <button onClick={() => setPage('users')}>users</button>\n        {token ? <button onClick={() => setPage('addUser')}>add User</button> \n        : null }\n        {!token ? <button onClick={() => setPage('login')}>login</button> \n        : <button onClick={() => logout()}>logout</button>}</div>\n\n      <Users\n        show={page === 'users'}\n        users = {allUsers.data}\n      />\n\n\n\n      <UserForm\n        show={page === 'addUser'}\n        setError={notify}\n        token={token}\n        \n      />\n\n      <LoginForm\n        show={page === 'login' && !token}\n        setError={notify}\n        setToken={setToken}\n        setPage={setPage}\n        setUser={setUser}\n        \n      />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","E:\\zeroProject\\client\\src\\components\\LoginForm.js",[],"E:\\zeroProject\\client\\src\\queries\\query.js",[],"E:\\zeroProject\\client\\src\\queries\\mutation.js",[],["46","47"],"E:\\zeroProject\\client\\src\\components\\Notify.js",["48"],"import React from 'react'\r\n\r\n\r\n  const Notify = ({errorMessage}) => {\r\n      \r\n    if ( !errorMessage ) {\r\n      return null\r\n    }\r\n    return (\r\n      <div style={{color: 'red'}}>\r\n        {console.log(errorMessage), errorMessage}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notify","E:\\zeroProject\\client\\src\\components\\Users.js",[],"E:\\zeroProject\\client\\src\\components\\UserForm.js",["49","50"],"import React, { useState } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { CREATE_USER } from '../queries/mutation'\r\nimport Notify from './Notify'\r\n\r\nconst UserForm = (props) => {\r\n  const [username, setUsername] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n\r\n  const [ createUser ] = useMutation(CREATE_USER, {\r\n    // refetchQueries: [ { query: ALL_USERS } ],\r\n    onError: (error) => {\r\n        props.setError(error.graphQLErrors[0] ? error.graphQLErrors[0].message : null)\r\n    },\r\n    \r\n    update: (store, response) => {\r\n      props.updateCacheWith(response.data.addBook)\r\n    },\r\n    /*\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: ALL_BOOKS })\r\n      store.writeQuery({\r\n        query: ALL_BOOKS,\r\n        data: {\r\n          ...dataInStore,\r\n          allBooks: [ ...dataInStore.allBooks, response.data.addBook ]\r\n        }\r\n      })\r\n    }*/\r\n  })\r\n\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault()\r\n\r\n   createUser({ variables: { username,  name, password } })\r\n    \r\n    console.log('create user...', createUser)\r\n    console.log('add user...', username, name, password )\r\n\r\n    setUsername('')\r\n    setName('')\r\n    setPassword('')\r\n  }\r\n\r\n\r\n  if(!props.token){\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n          <h2> Add User </h2>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          username\r\n          <input\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          name\r\n          <input\r\n            value={name}\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n     \r\n        <button type='submit'>create user</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserForm","E:\\zeroProject\\client\\src\\queries\\subscription.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":16,"column":10,"nodeType":"57","messageId":"58","endLine":16,"endColumn":14},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":11,"column":35,"nodeType":"63","messageId":"64","endLine":11,"endColumn":36},{"ruleId":"55","severity":1,"message":"65","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":22},{"ruleId":"55","severity":1,"message":"66","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["67"],["68"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useLazyQuery' is defined but never used.","'Notify' is defined but never used.","no-global-assign","no-unsafe-negation"]