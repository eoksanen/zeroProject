[{"E:\\zeroProject\\client\\src\\index.js":"1","E:\\zeroProject\\client\\src\\App.js":"2","E:\\zeroProject\\client\\src\\components\\LoginForm.js":"3","E:\\zeroProject\\client\\src\\queries\\query.js":"4","E:\\zeroProject\\client\\src\\queries\\mutation.js":"5","E:\\zeroProject\\client\\src\\components\\Notify.js":"6","E:\\zeroProject\\client\\src\\components\\Users.js":"7","E:\\zeroProject\\client\\src\\components\\UserForm.js":"8","E:\\zeroProject\\client\\src\\queries\\subscription.js":"9"},{"size":1792,"mtime":1608714832020,"results":"10","hashOfConfig":"11"},{"size":4627,"mtime":1608727741560,"results":"12","hashOfConfig":"11"},{"size":1884,"mtime":1608385174926,"results":"13","hashOfConfig":"11"},{"size":912,"mtime":1608129044540,"results":"14","hashOfConfig":"11"},{"size":986,"mtime":1608564098979,"results":"15","hashOfConfig":"11"},{"size":285,"mtime":1608027761598,"results":"16","hashOfConfig":"11"},{"size":2962,"mtime":1608728553490,"results":"17","hashOfConfig":"11"},{"size":2301,"mtime":1608564314843,"results":"18","hashOfConfig":"11"},{"size":398,"mtime":1608726178827,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13qo4nq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\zeroProject\\client\\src\\index.js",[],["41","42"],"E:\\zeroProject\\client\\src\\App.js",["43"],"E:\\zeroProject\\client\\src\\components\\LoginForm.js",[],"E:\\zeroProject\\client\\src\\queries\\query.js",[],"E:\\zeroProject\\client\\src\\queries\\mutation.js",[],"E:\\zeroProject\\client\\src\\components\\Notify.js",["44"],"import React from 'react'\r\n\r\n\r\n  const Notify = ({errorMessage}) => {\r\n      \r\n    if ( !errorMessage ) {\r\n      return null\r\n    }\r\n    return (\r\n      <div style={{color: 'red'}}>\r\n        {console.log(errorMessage), errorMessage}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notify","E:\\zeroProject\\client\\src\\components\\Users.js",["45","46","47","48"],"E:\\zeroProject\\client\\src\\components\\UserForm.js",["49","50"],"import React, { useState } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { ALL_USERS } from '../queries/query'\r\nimport { CREATE_USER } from '../queries/mutation'\r\nimport Notify from './Notify'\r\n\r\nconst UserForm = (props) => {\r\n  const [username, setUsername] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n\r\n  const [ createUser ] = useMutation(CREATE_USER, {\r\n    // refetchQueries: [ { query: ALL_USERS } ],\r\n    onError: (error) => {\r\n        props.setError(error.graphQLErrors[0] ? error.graphQLErrors[0].message : null)\r\n    },\r\n    /*\r\n    update: (store, response) => {\r\n      console.log('response mutation createUser ',response.data.createUser)\r\n      props.updateCacheWith(response.data.createUser)\r\n    },\r\n    */\r\n    \r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: ALL_USERS })\r\n      store.writeQuery({\r\n        query: ALL_USERS,\r\n        data: {\r\n          ...dataInStore,\r\n          allUsers: [ ...dataInStore.allUsers, response.data.createUser ]\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault()\r\n\r\n   createUser({ variables: { username,  name, password } })\r\n    \r\n    console.log('create user...', createUser)\r\n    console.log('add user...', username, name, password )\r\n\r\n    setUsername('')\r\n    setName('')\r\n    setPassword('')\r\n  }\r\n\r\n\r\n  if(!props.token){\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n          <h2> Add User </h2>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          username\r\n          <input\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          name\r\n          <input\r\n            value={name}\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n     \r\n        <button type='submit'>create user</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserForm","E:\\zeroProject\\client\\src\\queries\\subscription.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":20,"nodeType":"57","messageId":"58","endLine":10,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":11,"column":35,"nodeType":"61","messageId":"62","endLine":11,"endColumn":36},{"ruleId":"55","severity":1,"message":"63","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":19},{"ruleId":"55","severity":1,"message":"64","line":4,"column":23,"nodeType":"57","messageId":"58","endLine":4,"endColumn":28},{"ruleId":"55","severity":1,"message":"65","line":4,"column":30,"nodeType":"57","messageId":"58","endLine":4,"endColumn":34},{"ruleId":"55","severity":1,"message":"66","line":47,"column":13,"nodeType":"57","messageId":"58","endLine":47,"endColumn":23},{"ruleId":"55","severity":1,"message":"67","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":22},{"ruleId":"55","severity":1,"message":"68","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":14},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ALL_USERS' is defined but never used.","'LOGIN' is defined but never used.","'TEST' is defined but never used.","'createUser' is assigned a value but never used.","'useLazyQuery' is defined but never used.","'Notify' is defined but never used.","no-global-assign","no-unsafe-negation"]